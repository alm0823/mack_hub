msusub[which(msusub$sems == "spr2016"), vars]
msusub[which(msusub$lastNonNA_name == "spr2016"), vars]
msusub[which(msusub$sems == "spr2016"), c(sems, "firstNonNA_name", "firstNonNA", "lastNonNA_name", "lastNonNA")]
dim(msusub)
b <- msusub[which(msusub$lastNonNA_name == "spr2016"), vars]
b
colnames(msusub[,sems])[msusub$lastNonNA[4]]
sems[msusub$lastNonNA]
sems[msusub$lastNonNA[4]]
sems
sems[msusub$lastNonNA[335]]
msusub$lastNonNA[335]
msusub$lastNonNA_name <- NULL
last <- function(x){sems[msusub$lastNonNA[x]] return(last)}
for(i in dim(msusub[1])){
msusub$lastNonNA_name <- NULL
last <- function(x){sems[msusub$lastNonNA[x] return(last)}
last <- function(x){u <- sems[msusub$lastNonNA[x] return(u)}
last <- function(x){
u <- sems[msusub$lastNonNA[x]]
return(u)}
for(i in dim(msusub[1])){
msusub$lastNonNA_name[i] <- last(i)
}
msusub$lastNonNA_name
last(1)
?by
msusub$lastNonNA_name <- by(sems[msusub$lastNonNA], 1, last)
row.ind <- c(1:358)
row.ind
msusub$lastNonNA_name <- apply(row.ind, 1, last)
row.ind <- data.frame(c(1:358))
msusub$lastNonNA_name <- apply(row.ind, 1, last)
msusub$lastNonNA_name
msusub[,c(sems, "lastNonNA", "lastNonNA_name")]
msusub[which(msusub$lastNonNA_name) == "spr2016",c(sems, "lastNonNA", "lastNonNA_name")]
msusub[which(msusub$lastNonNA_name == "spr2016"),c(sems, "lastNonNA", "lastNonNA_name")]
msusub[which(msusub$lastNonNA_name == "spr2016"),c(sems, "lastNonNA", "lastNonNA_name", "firstNonNA")]
msusub$lastNonNA_name <- NULL
last <- function(x){
u <- sems[msusub$lastNonNA[x]]
return(u)}
row.ind <- data.frame(c(1:358))
msusub$lastNonNA_name <- apply(row.ind, 1, last)
msusub$firstNonNA_name <- NULL
first <- function(x){
u <- sems[msusub$firstNonNA[x]]
return(u)}
msusub$firstNonNA_name <- apply(row.ind, 1, first)
msusub[which(msusub$lastNonNA_name == "spr2016"),c(sems, "lastNonNA", "lastNonNA_name", "firstNonNA")]
msusub[which(msusub$lastNonNA_name == "spr2016"),c(sems, "lastNonNA", "lastNonNA_name", "firstNonNA", "diff")]
msusub$degree1 <- msuna$DEGREE1_AWARDED
msusub$degree2 <- msuna$DEGREE2_AWARDED
msusub$degree3 <- msuna$DEGREE3_AWARDED
#this is created assuming that if you have two degrees, you have to have one degree
msusub$degree <- ifelse(msusub$degree3 != "", "three", ifelse(msusub$degree3 == "" & msusub$degree2 != "", "two", ifelse(msusub$degree3 == "" & msusub$degree2 == "" & msusub$degree1 != "", "one", "no degree")))
msusub$degree <- factor(msusub$degree, levels = c("three", "two", "one", "no degree"))
#the plot below shows (1) the number of students first taking credits (not those first enrolling bc some enrolled, but did not take credits in that semester, so I think this is more informative) and (2) the number of semesters until the first nonNA in terms of semester of credits
#use the plot to see if the number of semesters until first NA is decreasing, meaning people getting degrees faster
#still to do (1) facet by number of degrees (2) check: I am concerned that if they were still taking credits in 2016, WHERE do they fall in the diff spectrum
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe")
msusub[which(msusub$lastNonNA_name == "sum2004"),c(sems, "lastNonNA", "lastNonNA_name", "firstNonNA", "diff")]
msusub[which(msusub$lastNonNA_name == "sum2004"),c(sems, "lastNonNA", "lastNonNA_name", "firstNonNA", "diff")]
msusub[which(msusub$firstNonNA_name == "sum2004"),c(sems, "lastNonNA", "lastNonNA_name", "firstNonNA", "diff")]
length(semes)
length(sems)
msusub$diff <- 1+msusub$lastNonNA - msusub$firstNonNA#add 1 INCLUDING semester before last NA
msusub$firstNonNA_name <- NULL
msusub$firstNonNA_name <- apply(data.frame(msusub$firstNonNA), 1, function(x){colnames(msusub[,sems])[msusub$firstNonNA[x]]})
msusub$lastNonNA_name <- NULL
last <- function(x){
u <- sems[msusub$lastNonNA[x]]
return(u)}
row.ind <- data.frame(c(1:358))
msusub$firstNonNA_name <- NULL
msusub$lastNonNA_name <- apply(row.ind, 1, last)
first <- function(x){
u <- sems[msusub$firstNonNA[x]]
return(u)}
msusub$firstNonNA_name <- apply(row.ind, 1, first)
msusub$degree1 <- msuna$DEGREE1_AWARDED
msusub$degree2 <- msuna$DEGREE2_AWARDED
msusub$degree3 <- msuna$DEGREE3_AWARDED
#this is created assuming that if you have two degrees, you have to have one degree
msusub$degree <- ifelse(msusub$degree3 != "", "three", ifelse(msusub$degree3 == "" & msusub$degree2 != "", "two", ifelse(msusub$degree3 == "" & msusub$degree2 == "" & msusub$degree1 != "", "one", "no degree")))
msusub$degree <- factor(msusub$degree, levels = c("three", "two", "one", "no degree"))
#the plot below shows (1) the number of students first taking credits (not those first enrolling bc some enrolled, but did not take credits in that semester, so I think this is more informative) and (2) the number of semesters until the first nonNA in terms of semester of credits
#use the plot to see if the number of semesters until first NA is decreasing, meaning people getting degrees faster
#check
#still to do (1) facet by number of degrees (2) check: I am concerned that if they were still taking credits in 2016, WHERE do they fall in the diff spectrum
msusub[which(msusub$firstNonNA_name == "sum2004"),c(sems, "lastNonNA", "lastNonNA_name", "firstNonNA", "diff")]
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe")
ggplot(data = msusub, aes(x = lastNonNA_name, y = diff)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("Last Semester of Taking Courses within Data Timeframe")
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe")
apply(msuna[,sems], 1, function(x){length(!is.na(x)} )
l.na <- function(x){
a <- length(which(!is.na(x)))
return(a)
}
apply(msuna[,sems], 1, l.na)
msusub$nenroll <- apply(msuna[,sems], 1, l.na)
head(msusub)
msusub[1,c(sems, "nenroll")]
msusub$degree
msusub$degree.ind <- ifelse(msusub$degree == "no degree", "no", "yes")
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe")
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer()
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1")
ggplot(data = msusub, aes(x = firstNonNA_name, y = nenroll, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters Taking Credits") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1")
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1") + guide_legend(title = "Degree", position = "top")
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1") + guide_legend(title = "Degree")
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90)) + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1") + guide_legend(position = "top")
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = lastNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between First and Last Credit Enrollment") + xlab("Last Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
length(which(msusub$degree3 == "yes"))
summary(msusub$degree3)
summary(msusub$degree)
4+59+119+176
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
table(msusub$degree, msusub$firstNonNA_name)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(msusub$degree ~ .) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree ~ .) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
msusub$degree <- ifelse(msusub$degree3 != "", "three", ifelse(msusub$degree3 == "" & msusub$degree2 != "", "two", ifelse(msusub$degree3 == "" & msusub$degree2 == "" & msusub$degree1 != "", "one", "no degree")))
msusub$degree.ind <- ifelse(msusub$degree == "no degree", "no", "yes")
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree ~ .) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
table(msusub$degree, msusub$firstNonNA_name)
summary(msuna$DEGREE1_AWARDED)
summary(msuna$DEGREE2_AWARDED)
summary(msuna$DEGREE3_AWARDED)
msusub$degree <- ifelse(msusub$degree3 != "", "three", ifelse(msusub$degree3 == "" & msusub$degree2 != "", "two", ifelse(msusub$degree3 == "" & msusub$degree2 == "" & msusub$degree1 != "", "one", "no degree")))
summary(msusub$degree)
msusub$degree <- factor(c(ifelse(msusub$degree3 != "", "three", ifelse(msusub$degree3 == "" & msusub$degree2 != "", "two", ifelse(msusub$degree3 == "" & msusub$degree2 == "" & msusub$degree1 != "", "one", "no degree")))))
summary(msusub$degree)
msusub$degree <- factor(msusub$degree, levels = c("three", "two", "one", "no degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
msuna$ind <- c(seq(1:358))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind, label = ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
msuna$ind <- c(seq(1:358))
msusub$ind <- c(seq(1:358))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, col = degree.ind, label = ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
msusub$ind
msusub$ind <- c(as.character(seq(1:358)))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_point() + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_point()
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_point() + geom_text(aes(label = ind)) + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_text(aes(label = ind)) + geom_jitter() + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_text(aes(label = ind)) + geom_jitter(width = 0.5) + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_text(aes(label = ind)) + geom_jitter(width = 1) + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_text(aes(label = ind)) + geom_jitter(width = 5) + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_text(aes(label = ind)) + geom_jitter(width = 10) + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_text(aes(label = ind)) + geom_jitter(width = 20) + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msusub, aes(x = firstNonNA_name, y = diff, label = ind)) + geom_text(aes(label = ind)) + geom_jitter(width = 50) + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters between (and including) \n First and Last Credit Enrollment") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
ggplot(data = msuna.long, aes(x = semester, y = credits, col = id)) + geom_line()
ggplot(data = msuna.long, aes(x = semester, y = credits, col = id)) + geom_line() + theme(legend.position = "none")
ggplot(data = msuna.long, aes(x = semester, y = credits, line = id)) + geom_line() + theme(legend.position = "none")
<<plot1>>=
ggplot(data = msuna.long, aes(x = semester, y = credits, line = id)) + geom_point() + geom_line(aes(group = id)) + theme(legend.position = "none")
ggplot(data = msuna.long, aes(x = semester, y = credits, col = id)) + geom_point() + geom_line(aes(group = id)) + theme(legend.position = "none")
summary(msuna$DEGREE1_AWARDED)
msuna.long$degree
msusub$degree3
which(msusub$degree3 != "")
d3 <- which(msusub$degree3 != "")
d2 <- which(msusub$degree2 != "")
d1 <- which(msusub$degree1 != "")
d3 %in% d1
d2
d1
d2 %in% d1
msusub[d3, c("degree1", "degree2", "degree3")]
d2 %in% d1
length(which(d2 %in% d1 == TRUE))
length(which(d1 %in% d2 %in% d3 == TRUE))
length(which(d2 %in% d1 == TRUE))
length(which(d3 %in% d1 == TRUE))
length(which(d2 %in% d3 == TRUE))
length(which(d1 %in% d2 %in% d3 == TRUE))
d1 %in% d2 %in% d3
d2 %in% d1
d1 %in% d2
l12 <- length(which(d1 %in% d2 == TRUE))
l13 <- length(which(d1 %in% d3 == TRUE))
l23 <- length(which(d2 %in% d3 == TRUE))
l123 <- length(which(d1 %in% d2 %in% d3 == TRUE))
d3n <- which(msusub$degree 3 == "")
d3n <- which(msusub$degree 3 = "")
d3 <- which(msusub$degree3 != "")
d2 <- which(msusub$degree2 != "")
d1 <- which(msusub$degree1 != "")
d3n <- which(msusub$degree3 = "")
d2n <- which(msusub$degree2 = "")
d3n <- which(msusub$degree3 == "")
d2n <- which(msusub$degree2 == "")
d1n <- which(msusub$degree1 == "")
d3 + d3n
length(d3) + length(d3n)
length(d2) + length(d2n)
length(d1) + length(d1n)
l12 <- length(which(d1 %in% d2 == TRUE))
l13 <- length(which(d1 %in% d3 == TRUE))
l23 <- length(which(d2 %in% d3 == TRUE))
l123 <- length(which(d1 %in% d2 %in% d3 == TRUE))
l12+l13+l23+l123
d3n
length(d1n) + length(d2n) + length(d3n)
length(unique(c(d1n,d2n,d3n)))
ggplot(data = msusub, aes(x = firstNonNA_name, y = nenroll, col = degree.ind)) + geom_jitter(width = 2) + facet_grid(degree~.) + scale_x_discrete(limits = c(sems, NA)) + theme_bw() + theme(axis.text.x=element_text(angle=90), legend.position = "top") + ylab("Number of Semesters Taking Credits") + xlab("First Semester of Taking Courses within Data Timeframe") + scale_colour_brewer(palette = "Set1", guide = guide_legend(title = "Degree"))
degree_term <- data.frame(table(msuna$DEGREE_TYPE, msuna$ENTRY_TERM))
colnames(degree_term) <- c("degree_type", "termf", "count")
degree_termc <- degree_term[-which(degree_term$count <= 1),]
degree_termc <- with(degree_termc, degree_term[order(termf),])
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Set1") + xlab("semester") + scale_x_discrete(labels = sems) + theme(axis.text.x=element_text(angle=90))
msuna$ENTRY_TERM
msuna$DEGREE_TYPE
degree_term <- data.frame(table(msuna$DEGREE_TYPE, msuna$ENTRY_TERM))
degree_term
msuna$DEGREE_TYPE
degree_term
degree_term <- data.frame(table(msuna$DEGREE_TYPE, msuna$ENTRY_TERM))
colnames(degree_term) <- c("degree_type", "termf", "count")
degree_termc <- degree_term[-which(degree_term$count < 1),]
degree_termc <- with(degree_termc, degree_term[order(termf),])
degree_termc
degree_term
which(degree_term$count < 1)
degree_termc <- degree_term[-which(degree_term$count < 1),]
degree_termc
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Set1") + xlab("semester") + scale_x_discrete(labels = sems) + theme(axis.text.x=element_text(angle=90))
order(termf)
degree_termc <- with(degree_termc, degree_termc[order(termf),])
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Set1") + xlab("semester") + scale_x_discrete(labels = sems) + theme(axis.text.x=element_text(angle=90))
degree_termc
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Set1") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Set2") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer() + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Dark2") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
t <- function(x){
a <- ifelse(x == "30", "spr", ifelse(x == "50", "sum", ifelse(x == "70", "fall", "wrong")))
return(a)
}
substr(degree_termc$termf,1,4)
degree_termc$year <- substr(degree_termc$termf,1,4)
degree_Termc$month <- substr(degree_termc$termf,5,6)
degree_termc$month <- substr(degree_termc$termf,5,6)
degree_termc_monthname <- lapply(degree_termc$month, a)
degree_termc_monthname <- lapply(degree_termc$month, t)
degree_termc_monthname
degree_termc_monthname <- tapply(degree_termc$month, t)
degree_termc_monthname <- fapply(degree_termc$month, t)
degree_termc_monthname <- sapply(degree_termc$month, t)
degree_termc_monthname
paste(degree_termc_monthname, degree_termc_year, sep = "")
paste(degree_termc$monthname, degree_termc$year, sep = "")
paste(degree_termc$monthname, degree_termc$year)
stringmerge(degree_termc$monthname, degree_termc$year)
paste("1st", "2nd", "3rd", collapse = ", ") # probably not what you wanted
paste(degree_termc$monthname, degree_termc$year, collapse = ", ")
s1 <- "R-"
s2 <- "project"
paste(s1, s2, sep = "")
paste(degree_termc$monthname, degree_termc$year, sep = "")
paste(degree_termc$monthname, degree_termc$year, sep = " ")
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line(aes(size = 5)) + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line(aes(size = 2)) + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line(aes(size = 1)) + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line(aes(size = 0.5)) + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line(aes(size = 0.05)) + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line(aes(size = 0.00005)) + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line(aes(size = 0.00005em)) + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
ggplot(data = degree_termc, aes(x = termf, y = count, group = degree_type, colour = degree_type)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Paired") + xlab("semester") + theme(axis.text.x=element_text(angle=90))
stem_term <- data.frame(table(msuna$stem, msuna$ENTRY_TERM))
colnames(stem_term) <- c("stem", "termf", "count")
stem_term <- with(stem_term, stem_term[order(termf),])
ggplot(data = stem_term, aes(x = termf, y = count, group = stem, colour = stem)) + geom_point()  + geom_line() + scale_color_brewer(palette = "Set1") + xlab("semester") + scale_x_discrete(labels = sems) + theme(axis.text.x=element_text(angle=90))
head(msuna)
source('~/.active-rstudio-document', echo=TRUE)
require(xtable)
require(effects)
require(car)#Anova
rawbozemandata <- read.csv("https://dl.dropboxusercontent.com/u/77307195/rawbozemandata.csv",
header = T)
rawd <- rawbozemandata
head(rawd)
rawd$year <- as.numeric(substr(rawd$DATE, 1,4))
rawd$monthf <- as.factor(month.abb[as.numeric(substr(rawd$DATE, 5,6))])
rawd$month <- as.numeric(substr(rawd$DATE, 5,6))
rawd$year.frac <- rawd$year + (rawd$month)/12
rawd$temp <- rawd$MMXT
lm1 <- lm(temp ~ monthf, data = rawd)
lm1.resid <- lm1$residuals
par(mfrow=c(2,1))
plot(lm1.resid ~ rawd$year.frac, xlab = "Fractional Year", ylab = "Residuals")
plot(MMXT ~ year.frac, data = rawd, xlab = "Fractional Year", ylab = "MMXT")
```
CHECK IF THIS IS WHAT HE WANTS
2) In the de-seasonalized Bozeman temperature data set, re-assess evidence for the linear trend. Compare the result (test statistic, degrees of freedom and size of p-value) of just fitting a linear time trend in these de-seasonalized responses to the result from our original model with a linear year component and a month adjustment (not the quadratic trend model).
lm2 <- lm(lm1.resid ~ rawd$year)
options(show.signif.stars = FALSE)
lm2.sum <- summary(lm2)
xtable(lm2.sum)
lm3 <- lm(temp ~ year + monthf, data = rawd)
lm3.sum <- summary(lm3)
xtable(lm3.sum)
hadcrut <- read.table("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.4.0.0.monthly_nh.txt", header = FALSE)
head(hadcrut)
hadcrut$date <- ts(hadcrut[,1], start = c(1850,01), end = c(2016,07), frequency = 12)
#col2 are the ensemble medians
plot(hadcrut$V2 ~ hadcrut$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
#an ensemble data set in which the 100 constituent
ensemble members sample the distribution of likely surface temperature anomalies given our
current understanding of these uncertainties
#Sea Surface Temperature anomalies in degrees Celsius, or "SST anomalies" for short, are how much temperatures depart from what is normal for that time of year.
par(mfrow = c(2,2))
plot(lm4)
hadcrut$monthf <- as.factor(month.abb[as.numeric(substr(hadcrut$V1,6,7))])
lm4 <- lm(V2 ~ time.date + monthf, data = hadcrut)#don't need monthf as explanatory bc month already induced in time??
plot(allEffects(lm4))
hadcrut$time.date <- time(hadcrut$date)
lm4.anova <- Anova(lm4, type = "II")
hadcrut <- read.table("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.4.0.0.monthly_nh.txt", header = FALSE)
head(hadcrut)
hadcrut$date <- ts(hadcrut[,1], start = c(1850,01), end = c(2016,07), frequency = 12)
plot(hadcrut$V2 ~ hadcrut$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
#an ensemble data set in which the 100 constituent
rawbozemandata <- read.csv("https://dl.dropboxusercontent.com/u/77307195/rawbozemandata.csv",
header = T)
rawd <- rawbozemandata
head(rawd)
rawd$year <- as.numeric(substr(rawd$DATE, 1,4))
rawd$monthf <- as.factor(month.abb[as.numeric(substr(rawd$DATE, 5,6))])
rawd$month <- as.numeric(substr(rawd$DATE, 5,6))
rawd$temp <- rawd$MMXT
rawd$year.frac <- rawd$year + (rawd$month)/12
lm1.resid <- lm1$residuals
lm1 <- lm(temp ~ monthf, data = rawd)
#options(show.sigif.stars = FALSE)
```
```{prob1, fig.height = 5, fig.width = 5, fig.align = "center", eval = TRUE}
par(mfrow=c(2,1))
plot(lm1.resid ~ rawd$year.frac, xlab = "Fractional Year", ylab = "Residuals")
plot(MMXT ~ year.frac, data = rawd, xlab = "Fractional Year", ylab = "MMXT")
```
CHECK IF THIS IS WHAT HE WANTS
2) In the de-seasonalized Bozeman temperature data set, re-assess evidence for the linear trend. Compare the result (test statistic, degrees of freedom and size of p-value) of just fitting a linear time trend in these de-seasonalized responses to the result from our original model with a linear year component and a month adjustment (not the quadratic trend model).
\label{Deseasonalized Temperature Regressed on Year}
```{prob2, results = 'asis'}
lm2 <- lm(lm1.resid ~ rawd$year)
options(show.signif.stars = FALSE)
lm2.sum <- summary(lm2)
xtable(lm2.sum)
```
```{prob2x, results = 'asis'}
\label{Temperature Regressed on Year and Month}
lm3.sum <- summary(lm3)
lm3 <- lm(temp ~ year + monthf, data = rawd)
xtable(lm3.sum)
```
3) I briefly discussed the HADCRUT data set in class. We will consider the HADCRUT4 series of temperature anomalies for the Nothern Hemisphere. The fully up to date data set is available at: http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.4.0.0.monthly_nh.txt
```{prob3, include = FALSE}
hadcrut <- read.table("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.4.0.0.monthly_nh.txt", header = FALSE)
head(hadcrut)
hadcrut$date <- ts(hadcrut[,1], start = c(1850,01), end = c(2016,07), frequency = 12)
#only use ts if no months/years missing
```
Download the ensemble median monthly northern hemisphere temperature data. We will use the entire time series that is currently available (January 1850 to July 2016). You might want to read http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/series_format.html for more information on the columns in the data set.
Because the time series is complete over the time frame under consideration, you can use `ts()` to create a time variable instead of messing around with their `Year/Month` variable.
Make a plot versus time of the ensemble medians and use that as your response variable in the following questions. Discuss trend, seasonality, outliers, and variability.
SO, to me the ensemble is the difference from the median temperature that is normal for that time of year. It's not clear to me whether the median is computed for each month before the difference is taken, or whether the overall median (regardless of month) is subtracted from each temperature value to get the ensemble variable.
DISCUSS
```{prob3x}
#col2 are the ensemble medians
plot(hadcrut$V2 ~ hadcrut$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
#an ensemble data set in which the 100 constituent
ensemble members sample the distribution of likely surface temperature anomalies given our
current understanding of these uncertainties
#Sea Surface Temperature anomalies in degrees Celsius, or "SST anomalies" for short, are how much temperatures depart from what is normal for that time of year.
```
4) Our main focus with these data will be on estimating the long-term trend, starting with polynomial trend models. But first, check for seasonality in a model that accounts for a linear time trend. Use our previous fractional year for the trend. Report an `effects` plot and a test for the month model component.
SEE COMMENT IN CODE CHUNK
ALSO, DO WE USE FRACTIONAL YEAR AS IN PART (A) OR DO WE USE TS OBJECT?
Based on an Fstat of 6.74 on 11 and 1986 degrees of freedom, with an associated pvalue of $\<$ 0.001, there is strong evidence that the effect of date on median ensemble changes by month.
```{prob4, results = 'asis'}
hadcrut$monthf <- as.factor(month.abb[as.numeric(substr(hadcrut$V1,6,7))])
hadcrut$time.date <- time(hadcrut$date)
lm4 <- lm(V2 ~ time.date + monthf, data = hadcrut)#don't need monthf as explanatory bc month already induced in time??
plot(allEffects(lm4))
lm4.anova <- Anova(lm4, type = "II")
print(xtable(lm4.anova))
hadcrut <- read.table("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.4.0.0.monthly_nh.txt", header = FALSE)
hadcrut <- read.table("hadcrut", header = FALSE)
hadcrut <- read.table("hadcrut.txt", header = FALSE)
1) For the Bozeman temperature data from HW 1 and 2, estimate a model with month only, subtract its fitted values from the responses (or just extract residuals). Plot the residuals vs the fractional `Year` variable and compare the plot of this result to the plot of the original time series.
plot(shuffle(hadcrut$V2) ~ hadcrut$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians", main = "Shuffled")
require(car)
install.packages("mosaic")
y
require(mosaic)
set.seed(12)
plot(shuffle(hadcrut$V2) ~ hadcrut$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians", main = "Shuffled")
set.seed(12)
plot(shuffle(hadcrut$V2) ~ hadcrut$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians", main = "Shuffled")
polyfunc<-function(i) {
poly.lm<-lm(V2~poly(time.date,i,raw=TRUE) + monthf, data = hadcrut)
return (summary(poly.lm))
}
polyfunc(4)
hadcrut <- read.table("hadcrut.txt", header = FALSE)
hadcrut <- read.table("hadcrut.txt")
setwd("~/Desktop/mack_hub/course_work/Time Series/Homework/HW3/hw3_stat537")
hadcrut <- read.table("hadcrut.txt", header = FALSE)
head(hadcrut)
hadcrut$date <- ts(hadcrut[,1], start = c(1850,01), end = c(2016,07), frequency = 12)
#only use ts if no months/years missing
par(mfrow=c(1,1))
plot(hadcrut$V2 ~ hadcrut$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
set.seed(12)
plot(shuffle(hadcrut$V2) ~ hadcrut$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians", main = "Shuffled")
par(mfrow=c(2,1))
plot(hadcrut[1:12,]$V2 ~ hadcrut[1:12,]$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
plot(hadcrut[13:24,]$V2 ~ hadcrut[13:24,]$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
par(mfrow = c(2,1))
plot(hadcrut[25:36,]$V2 ~ hadcrut[25:36,]$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
plot(hadcrut[37:48,]$V2 ~ hadcrut[37:48,]$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
plot(hadcrut[49:60,]$V2 ~ hadcrut[49:60,]$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
plot(hadcrut[61:72,]$V2 ~ hadcrut[61:72,]$date, xlab = "Months Since January 1850", ylab = "Ensemble Medians")
#an ensemble data set in which the 100 constituent
#ensemble members sample the distribution of likely surface temperature anomalies given our
hadcrut$monthf <- as.factor(as.numeric(substr(hadcrut$V1,6,7)))
hadcrut$time.date <- as.vector(time(hadcrut$date))
lm4 <- lm(V2 ~ time.date + monthf, data = hadcrut)#don't need monthf as explanatory bc month already induced in time??
plot(allEffects(lm4))
lm4.anova <- Anova(lm4, type = "II")
(xtable(lm4.anova))
polyfunc<-function(i) {
poly.lm<-lm(V2~poly(time.date,i,raw=TRUE) + monthf, data = hadcrut)
return (summary(poly.lm))
}
polyfunc(4)
polyfunc(5)
setwd("~/Desktop/mack_hub/course_work/Time Series/Homework/HW3/hw3_stat537")
plot((hadcrut$V2)^4, (hadcrut$V2)^5)
plot((scale(hadcrut$V2)^4, (scale(hadcrut$V)2)^5)
plot((scale(hadcrut$V2)^4 ~ (scale(hadcrut$V)2)^5)
plot((scale(hadcrut$V2)^4 ~ (scale(hadcrut$V2))^5)
)
plot((scale(hadcrut$V2))^4 ~ (scale(hadcrut$V2)^5))
plot((scale(hadcrut$V2)^4) ~ (scale(hadcrut$V2^5)))
y <- hadcrut$V2 - max(hadcrut$V2)
plot(y^4 ~ y^5)
y^4
plot((y/10)^4 ~ (y/10)^5)
y <- y/0
y <- hadcrut$V2 - max(hadcrut$V2)
y <- y/10
plot(y^4 ~ y^5)
plot.new()
plot(y^4 ~ y^5, xlim=c(-100,100, ylim = c(-100,100)))
plot(y^4 ~ y^5, xlim=c(-100,100), ylim = c(-100,100))
setwd("C:/Users/Andrea Mack/Desktop/mack_hub/course_work/Time Series/Homework/HW3/hw3_stat537")
rawbozemandata <- read.csv("rawbozemandata",
header = T)
setwd("C:/Users/Andrea Mack/Desktop/mack_hub/course_work/Time Series/Homework/HW3/hw3_stat537")
rawbozemandata <- read.csv("rawbozemandata", header = T)
rawbozemandata <- read.csv("rawbozemandata.csv", header = T)
s4 <- summary(lm.d[4])
lm.d <- NULL
for(i in 1:25){
lm.d[i] <- lm(V2~poly(time.date,i,raw=TRUE) + monthf, data = hadcrut)
}
s4 <- summary(lm.d[4])
s4
s4 <- summary(lm.d[[4]])
s4
xtable(polyfunc(4))
xtable(polyfunc(5))
polyfunc(4)
lm3.sum
?pander
require(pander)
?pander
polyfunc(5) <- ifelse(polyfun(5) == NA, "", polyfun(5))
a <- polyfun(5)
a <- polyfunc(5)
ab <- ifelse(a == NA, "", a)
kable(polyfunc(5)$coeff)
require(knitr)
kable(polyfunc(5)$coeff)
7 -> N
4 -> n
k <- factorial(N) / (factorial(N - n) * factorial(n))
cat("\\[k \\leftarrow factorial(N) / (factorial(N - n) * factorial(n))\\]")
cat("For $N=7$ and $n=4$ is:\\par")
cat("H[o]" ,"H[a]",i, " = 0", "H", "$_{a}$", "B", i, "$\neq 0$", "tstat = ", s[[i]]$coefficients[i,3], "df = ", 1987-i, "pvalue = ", s[[i]]$coefficients[i,4], sep ="\n")
s <- lapply(a, function(x){summary(lm(V2~poly(time.date,x,raw=FALSE) + monthf, data = hadcrut))})
a <- seq(1:15)
#we are not supposed to scale these, by using raw = FALSE, r is automatically fitting orthogonal polynomials
s <- lapply(a, function(x){summary(lm(V2~poly(time.date,x,raw=FALSE) + monthf, data = hadcrut))})
a2 <- seq(2:15)
test <- NULL
for(i in a2){
cat("H[o]" ,"H[a]",i, " = 0", "H", "$_{a}$", "B", i, "$\neq 0$", "tstat = ", s[[i]]$coefficients[i,3], "df = ", 1987-i, "pvalue = ", s[[i]]$coefficients[i,4], sep ="\n")
}
?cat
cat("H[o]" ,"H[a]",i, " = 0", "H", "$_{a}$", "B", i, "$\neq 0$", "tstat = ", s[[i]]$coefficients[i,3], "df = ", 1987-i, "pvalue = ", s[[i]]$coefficients[i,4],"\n", sep = "\n")
1850-2016
166/4
plot(lm4$residuals ~ lm4$fitted.values, xlab = "Time", ylab = "linear model residuals")
